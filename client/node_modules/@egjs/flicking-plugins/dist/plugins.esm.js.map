{"version":3,"file":"plugins.esm.js","sources":["../src/Parallax.ts","../src/Fade.ts","../src/AutoPlay.ts","../src/index.ts"],"sourcesContent":["import Flicking, { FlickingEvent, Plugin } from \"@egjs/flicking\";\n\n/**\n * You can apply parallax effect while panel is moving.\n * @ko 패널들을 움직이면서 parallax 효과를 부여할 수 있습니다.\n * @memberof eg.Flicking.plugins\n */\nclass Parallax implements Plugin {\n  /**\n   * @param - Selector of the element to apply parallax effect <ko> Parallax 효과를 적용할 엘리먼트의 선택자 </ko>\n   * @param - Effect amplication scale <ko>효과 증폭도</ko>\n   * @example\n   * flicking.addPlugins(new eg.Flicking.plugins.Parallax(\"img\", 1));\n   */\n  constructor(private selector: string = \"\", private scale: number = 1) {}\n  public init(flicking: Flicking): void {\n    flicking.on(\"move\", this.onMove);\n    this.move(flicking);\n  }\n  public update(flicking: Flicking): void {\n    this.move(flicking);\n  }\n  public destroy(flicking: Flicking): void {\n    flicking.off(\"move\", this.onMove);\n  }\n  private onMove = (e: FlickingEvent): void => {\n    this.move(e.currentTarget);\n  }\n  private move(flicking: Flicking): void {\n    const panels = flicking.getVisiblePanels();\n\n    panels.forEach(panel => {\n      const progress = panel.getOutsetProgress();\n      const el = panel.getElement();\n      const target = el.querySelector<HTMLElement>(this.selector)!;\n      const parentTarget = target.parentNode as Element;\n      const rect = target.getBoundingClientRect();\n      const parentRect = parentTarget.getBoundingClientRect();\n      const position = (parentRect.width - rect.width) / 2 * progress * this.scale;\n      const transform = `translate(-50%) translate(${position}px)`;\n      const style = target.style;\n\n      style.cssText += `transform: ${transform};-webkit-transform: ${transform};-ms-transform:${transform}`;\n    });\n  }\n}\nexport default Parallax;\n","import Flicking, { FlickingEvent, Plugin } from \"@egjs/flicking\";\n\n/**\n * You can apply fade in / out effect while panel is moving.\n * @ko 패널들을 움직이면서 fade in / out 효과를 부여할 수 있습니다.\n * @memberof eg.Flicking.plugins\n */\nclass Fade implements Plugin {\n  /**\n   * @param - The selector of the element to which the fade effect is to be applied. If the selector is blank, it applies to panel element. <ko>Fade 효과를 적용할 대상의 선택자. 선택자가 공백이면 패널 엘리먼트에 적용된다.</ko>\n   * @param - Effect amplication scale <ko>효과 증폭도</ko>\n   * @example\n   * flicking.addPlugins(new eg.Flicking.plugins.Fade(\"p\", 1));\n   */\n  constructor(private selector: string = \"\", private scale: number = 1) {}\n  public init(flicking: Flicking): void {\n    flicking.on(\"move\", this.onMove);\n    this.move(flicking);\n  }\n  public update(flicking: Flicking): void {\n    this.move(flicking);\n  }\n  public destroy(flicking: Flicking): void {\n    flicking.off(\"move\", this.onMove);\n  }\n  private onMove = (e: FlickingEvent): void => {\n    this.move(e.currentTarget);\n  }\n  private move(flicking: Flicking): void {\n    const panels = flicking.getVisiblePanels();\n    const selector = this.selector;\n    const scale = this.scale;\n\n    panels.forEach(panel => {\n      const progress = panel.getOutsetProgress();\n      const el = panel.getElement();\n      const target = selector ? el.querySelector<HTMLElement>(selector)! : el;\n      const opacity = Math.min(1, Math.max(0, (1 - Math.abs(progress * scale))));\n\n      target.style.opacity = `${opacity}`;\n    });\n  }\n}\n\nexport default Fade;\n","import Flicking, { FlickingEvent, Plugin, Direction } from \"@egjs/flicking\";\n\ninterface AutoPlayOptions {\n  duration: number;\n  direction: Direction[keyof Direction];\n  stopOnHover: boolean;\n}\n\n// tslint:disable-next-line naming-convention\nconst DEFAULT_OPTION: AutoPlayOptions = {\n  duration: 2000,\n  direction: \"NEXT\",\n  stopOnHover: false,\n};\n\n/**\n * Plugin that allow you to automatically move to the next/previous panel, on a specific time basis\n * @ko 일정 시간마다, 자동으로 다음/이전 패널로 넘어가도록 할 수 있는 플러그인\n * @memberof eg.Flicking.plugins\n */\nclass AutoPlay implements Plugin {\n  /* Options */\n  private duration: AutoPlayOptions[\"duration\"];\n  private direction: AutoPlayOptions[\"direction\"];\n  private stopOnHover: AutoPlayOptions[\"stopOnHover\"];\n\n  /* Internal Values */\n  private flicking: Flicking | null = null;\n  private timerId = 0;\n  private mouseEntered = false;\n\n  /**\n   * @param options Options for the AutoPlay instance.<ko>AutoPlay 옵션</ko>\n   * @param options.duration Time to wait before moving on to the next panel.<ko>다음 패널로 움직이기까지 대기 시간</ko>\n   * @param options.direction The direction in which the panel moves.<ko>패널이 움직이는 방향</ko>\n   * @param options.stopOnHover Whether to stop when mouse hover upon the element.<ko>엘리먼트에 마우스를 올렸을 때 AutoPlay를 정지할지 여부</ko>\n   * @example\n   * flicking.addPlugins(new eg.Flicking.plugins.AutoPlay(2000, \"NEXT\"));\n   */\n  constructor(options: Partial<AutoPlayOptions> = DEFAULT_OPTION, direction: AutoPlayOptions[\"direction\"] = DEFAULT_OPTION.direction) {\n    if (typeof options === \"number\") {\n      // Fallback for previous interface\n      this.duration = options as number;\n      this.direction = direction;\n      this.stopOnHover = DEFAULT_OPTION.stopOnHover;\n      return;\n    }\n\n    const mergedOptions = {\n      ...DEFAULT_OPTION,\n      ...options,\n    } as AutoPlayOptions;\n    const { duration, direction: dir, stopOnHover } = mergedOptions;\n\n    this.duration = duration;\n    this.direction = dir;\n    this.stopOnHover = stopOnHover;\n  }\n\n  public init(flicking: Flicking): void {\n    flicking.on({\n      moveStart: this.stop,\n      holdStart: this.stop,\n      moveEnd: this.play,\n      select: this.play,\n    });\n\n    this.flicking = flicking;\n    if (this.stopOnHover) {\n      const targetEl = this.flicking.getElement();\n      targetEl.addEventListener(\"mouseenter\", this.onMouseEnter, false);\n      targetEl.addEventListener(\"mouseleave\", this.onMouseLeave, false);\n    }\n\n    this.play();\n  }\n\n  public destroy(): void {\n    const flicking = this.flicking;\n    this.mouseEntered = false;\n    this.stop();\n\n    if (!flicking) return;\n\n    flicking.off(\"moveStart\", this.stop);\n    flicking.off(\"holdStart\", this.stop);\n    flicking.off(\"moveEnd\", this.play);\n    flicking.off(\"select\", this.play);\n\n    const targetEl = flicking.getElement();\n    targetEl.removeEventListener(\"mouseenter\", this.onMouseEnter, false);\n    targetEl.removeEventListener(\"mouseleave\", this.onMouseLeave, false);\n\n    this.flicking = null;\n  }\n\n  public play = () => {\n    const flicking = this.flicking;\n    if (!flicking) return;\n\n    this.stop();\n\n    if (this.mouseEntered || flicking.isPlaying()) return;\n\n    this.timerId = window.setTimeout(() => {\n      flicking[this.direction === \"NEXT\" ? \"next\" : \"prev\"]();\n\n      this.play();\n    }, this.duration);\n  }\n\n  public stop = () => {\n    clearTimeout(this.timerId);\n  }\n\n  private onMouseEnter = () => {\n    this.mouseEntered = true;\n    this.stop();\n  }\n\n  private onMouseLeave = () => {\n    this.mouseEntered = false;\n    this.play();\n  }\n}\n\nexport default AutoPlay;\n","/**\n * @namepsace eg.Flicking\n */\n/**\n * @namepsace eg.Flicking.plugins\n */\nimport Parallax from \"./Parallax\";\nimport Fade from \"./Fade\";\nimport AutoPlay from \"./AutoPlay\";\n\nexport {\n  Parallax,\n  Fade,\n  AutoPlay,\n};\n"],"names":["selector","scale","e","_this","move","currentTarget","flicking","on","onMove","off","panels","getVisiblePanels","forEach","panel","progress","getOutsetProgress","el","getElement","target","querySelector","parentTarget","parentNode","rect","getBoundingClientRect","parentRect","position","width","transform","style","cssText","opacity","Math","min","max","abs","DEFAULT_OPTION","duration","direction","stopOnHover","options","stop","mouseEntered","isPlaying","timerId","window","setTimeout","play","clearTimeout","mergedOptions","tslib_1","dir","moveStart","holdStart","moveEnd","select","targetEl","addEventListener","onMouseEnter","onMouseLeave","removeEventListener"],"mappings":"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"}